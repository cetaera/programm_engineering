Диаграмма использования:

@startuml
actor Клиент
actor "Сотрудник банка" as Сотрудник
actor Администратор

rectangle "Система онлайн-банкинга" {
    usecase Регистрация as UC_Регистрация
    usecase Авторизация as UC_Авторизация
    usecase "Просмотр баланса" as UC_ПросмотрБаланса
    usecase "Перевод средств" as UC_ПереводСредств
    usecase "История транзакций" as UC_ИсторияТранзакций
    usecase "Управление счетами" as UC_УправлениеСчетами
    usecase "Управление пользователями" as UC_УправлениеПользователями
}

Клиент --> UC_Регистрация
Клиент --> UC_Авторизация
Клиент --> UC_ПросмотрБаланса
Клиент --> UC_ПереводСредств
Клиент --> UC_ИсторияТранзакций

Сотрудник --> UC_Авторизация
Сотрудник --> UC_УправлениеСчетами

Администратор --> UC_Авторизация
Администратор --> UC_УправлениеПользователями
@enduml

---------------------------------------------------------------
@startuml
actor Клиент
actor "Сотрудник банка" as Сотрудник
actor Администратор

rectangle "Система онлайн-банкинга" {
    usecase Регистрация as UC_Регистрация
    usecase Авторизация as UC_Авторизация
    usecase "Просмотр баланса" as UC_ПросмотрБаланса
    usecase "Перевод средств" as UC_ПереводСредств
    usecase "История транзакций" as UC_ИсторияТранзакций
    usecase "Детали транзакции" as UC_ДеталиТранзакции
    usecase "Управление счетами" as UC_УправлениеСчетами
    usecase "Управление пользователями" as UC_УправлениеПользователями
}

rectangle "Информационная система" {
    usecase "Управление данными клиентов" as IS_УправлениеКлиентами
    usecase "Управление транзакциями" as IS_УправлениеТранзакциями
}

Клиент --> UC_Регистрация
Клиент --> UC_Авторизация
Клиент --> UC_ПросмотрБаланса
Клиент --> UC_ПереводСредств
Клиент --> UC_ИсторияТранзакций
UC_ИсторияТранзакций --> UC_ДеталиТранзакции : <<extend>>

Сотрудник --> UC_Авторизация
Сотрудник --> UC_УправлениеСчетами

Администратор --> UC_Авторизация
Администратор --> UC_УправлениеПользователями

UC_ПросмотрБаланса --> UC_Авторизация : <<include>>
UC_ПереводСредств --> UC_Авторизация : <<include>>
UC_ИсторияТранзакций --> UC_Авторизация : <<include>>

UC_УправлениеСчетами --> IS_УправлениеКлиентами
UC_УправлениеСчетами --> IS_УправлениеТранзакциями
UC_УправлениеПользователями --> IS_УправлениеКлиентами
@enduml

-----------------------------------------------------------------------------


Диаграмма последовательностей:

@startuml
actor Клиент
participant "Система онлайн-банкинга" as BankingSystem
participant "Информационная система" as InfoSystem

== Авторизация ==
Клиент -> BankingSystem : Войти (логин, пароль)
BankingSystem -> InfoSystem : Проверить учетные данные
InfoSystem --> BankingSystem : Учетные данные корректны
BankingSystem --> Клиент : Доступ разрешен

== Просмотр баланса ==
Клиент -> BankingSystem : Запрос баланса
BankingSystem -> InfoSystem : Получить данные баланса
InfoSystem --> BankingSystem : Данные баланса
BankingSystem --> Клиент : Баланс отображен

== История транзакций ==
Клиент -> BankingSystem : Запрос истории транзакций
BankingSystem -> InfoSystem : Получить историю транзакций
InfoSystem --> BankingSystem : История транзакций
BankingSystem --> Клиент : Отображение истории транзакций

== Детали транзакции (расширение) ==
Клиент -> BankingSystem : Запрос деталей транзакции
BankingSystem -> InfoSystem : Получить детали транзакции
InfoSystem --> BankingSystem : Детали транзакции
BankingSystem --> Клиент : Отображение деталей транзакции
@enduml
-------------------------------------------------------------------------------------

Два варианта диаграммы деятельности:

@startuml
|Клиент|
start
:Ввод логина и пароля;

|Система|
if (Учетные данные верны?) then (да)
    :Предоставление доступа;
    
    |Клиент|
    :Запрос баланса;
    
    |Система|
    :Запрос данных баланса в информационной системе;
    :Получение данных баланса;
    
    |Клиент|
    :Отображение баланса;

    |Клиент|
    :Запрос истории транзакций;

    |Система|
    :Запрос истории транзакций в информационной системе;
    :Получение истории транзакций;

    |Клиент|
    :Отображение истории транзакций;

    |Клиент|
    if (Запрос деталей транзакции?) then (да)
        :Выбор транзакции;
        
        |Система|
        :Запрос деталей транзакции в информационной системе;
        :Получение деталей транзакции;
        
        |Клиент|
        :Отображение деталей транзакции;
    endif

else (нет)
    :Отображение ошибки авторизации;
endif

stop
@enduml
---------------------------------------------------------------------------------------------

@startuml
start

:Клиент вводит логин и пароль;
if (Учетные данные верны?) then (да)
    :Система предоставляет доступ;
    
    -> Запрос баланса;
    :Клиент запрашивает баланс;
    :Система запрашивает данные баланса\nв информационной системе;
    :Система получает данные баланса;
    :Система отображает баланс клиенту;
    
    -> Запрос истории транзакций;
    :Клиент запрашивает историю транзакций;
    :Система запрашивает историю транзакций\nв информационной системе;
    :Система получает историю транзакций;
    :Система отображает историю транзакций клиенту;

    if (Запрос деталей транзакции?) then (да)
        :Клиент выбирает транзакцию;
        :Система запрашивает детали транзакции\nв информационной системе;
        :Система получает детали транзакции;
        :Система отображает детали транзакции клиенту;
    endif

else (нет)
    :Система отображает ошибку авторизации;
endif

stop
@enduml
========================================================================================
Диаграмма объектов:

@startuml

object Клиент {
    логин = "user123"
    пароль = "******"
    статус = "авторизован"
}

object Система_онлайн_банкинга {
    авторизованный = true
    состояние_сессии = "активная"
}

object Информационная_система {
    данные_пользователя = "user123"
}

object Учетные_данные {
    логин = "user123"
    пароль = "******"
}

object Баланс {
    сумма = "1000 USD"
    дата_последнего_обновления = "2024-10-31"
}

object История_транзакций {
    транзакция1 = "10 USD на 2024-10-29"
    транзакция2 = "50 USD на 2024-10-28"
}

object Детали_транзакции {
    ID = "T123"
    сумма = "10 USD"
    дата = "2024-10-31"
    получатель = "магазин A"
}


Клиент --> Система_онлайн_банкинга : авторизуется
Система_онлайн_банкинга --> Учетные_данные : проверяет
Система_онлайн_банкинга --> Баланс : получает данные
Система_онлайн_банкинга --> История_транзакций : запрашивает историю
Система_онлайн_банкинга --> Детали_транзакции : запрашивает детали
Информационная_система --> Система_онлайн_банкинга : предоставляет данные

@enduml
